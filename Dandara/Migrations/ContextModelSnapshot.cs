// <auto-generated />
using System;
using Dandara.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Dandara.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Dandara.Models.CadastroVendedor", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CartaoCredito")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cnpj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriçãoAtividade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkVideo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sobrenome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mei")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Email");

                    b.ToTable("CadastroVendedor");
                });

            modelBuilder.Entity("Dandara.Models.ClienteCadastro", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CartaoCredito")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sobrenome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Email");

                    b.ToTable("ClienteCadastro");
                });

            modelBuilder.Entity("Dandara.Models.LoginCliente", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Senha")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Email");

                    b.ToTable("LoginCliente");
                });

            modelBuilder.Entity("Dandara.Models.LoginVendedor", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Senha")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Email");

                    b.ToTable("LoginVendedor");
                });

            modelBuilder.Entity("Dandara.Models.Produto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Condicoesdepagamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricaoproduto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Preco")
                        .HasColumnType("float");

                    b.Property<string>("categoriaa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("categoriab")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("categoriac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("categoriad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("categoriae")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("categoriag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("condicaoeentrega")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contatovendendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cores")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("datavalidade")
                        .HasColumnType("datetime2");

                    b.Property<double>("moeda")
                        .HasColumnType("float");

                    b.Property<string>("tamanho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("videodosprodutos")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("Dandara.Models.VendedorProduto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CadastroVendedorEmail")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("VendedorId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("CadastroVendedorEmail");

                    b.HasIndex("ProdutoId");

                    b.ToTable("vendedorProduto");
                });

            modelBuilder.Entity("Dandara.Models.CadastroVendedor", b =>
                {
                    b.HasOne("Dandara.Models.LoginVendedor", "LoginVendedor")
                        .WithOne("CadastroVendedor")
                        .HasForeignKey("Dandara.Models.CadastroVendedor", "Email")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoginVendedor");
                });

            modelBuilder.Entity("Dandara.Models.ClienteCadastro", b =>
                {
                    b.HasOne("Dandara.Models.LoginCliente", "LoginCliente")
                        .WithOne("ClienteCadastro")
                        .HasForeignKey("Dandara.Models.ClienteCadastro", "Email")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoginCliente");
                });

            modelBuilder.Entity("Dandara.Models.VendedorProduto", b =>
                {
                    b.HasOne("Dandara.Models.CadastroVendedor", "CadastroVendedor")
                        .WithMany("VendedorProduto")
                        .HasForeignKey("CadastroVendedorEmail");

                    b.HasOne("Dandara.Models.Produto", "Produto")
                        .WithMany("vendedorProduto")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CadastroVendedor");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Dandara.Models.CadastroVendedor", b =>
                {
                    b.Navigation("VendedorProduto");
                });

            modelBuilder.Entity("Dandara.Models.LoginCliente", b =>
                {
                    b.Navigation("ClienteCadastro");
                });

            modelBuilder.Entity("Dandara.Models.LoginVendedor", b =>
                {
                    b.Navigation("CadastroVendedor");
                });

            modelBuilder.Entity("Dandara.Models.Produto", b =>
                {
                    b.Navigation("vendedorProduto");
                });
#pragma warning restore 612, 618
        }
    }
}
